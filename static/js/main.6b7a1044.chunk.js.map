{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/Notification/Notification.module.scss","components/ContactForm/AppearStyles.module.scss","components/Button/Button.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactList/AppearStyles.module.scss","components/ContactList/ContactList.module.scss","components/Section/Section.module.scss","components/Section/AppearStyles.module.scss","components/Filter/AppearStyles.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/store.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/Button/Button.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Section/Section.js","components/Filter/Filter.js","components/views/ContactsView.js","components/App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","contactReducer","createReducer","_","payload","state","filter","id","filterReducer","loading","combineReducers","contacts","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","contactsReducer","persistor","persistStore","axios","defaults","baseURL","fetchContacts","dispatch","a","get","data","addContact","contact","post","deleteContact","contactId","delete","getContacts","getFilter","getLoading","getVisibleContacts","createSelector","name","toLowerCase","includes","number","getContactById","find","Notification","className","style","ContactForm","existingContact","errorMessage","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","map","showNotification","onAddContact","setTimeout","this","CSSTransition","in","classNames","AppearStyles","unmountOnExit","timeout","onSubmit","nameLabel","nameInput","onChange","placeholder","type","autoFocus","numberInput","format","mask","addButton","Component","mapDispatchToProps","contactsOperations","connect","contactsSelectors","Button","onRemove","onClick","ownProps","dispach","onRemoveContact","ContactItem","TransitionGroup","component","ContactList","length","Section","title","children","appear","ref","React","createRef","onChangeFilter","contactsActions","ContactsView","onFetchContacts","isLoadingContact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b7a1044.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1fCkt\",\"nameInput\":\"ContactForm_nameInput__3foIk\",\"numberInput\":\"ContactForm_numberInput__3ujaF\",\"nameLabel\":\"ContactForm_nameLabel__3B3ub\",\"addButton\":\"ContactForm_addButton__2Bryk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__3wRcD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"AppearStyles_enter__1I0v3\",\"enterActive\":\"AppearStyles_enterActive__1rBMo\",\"exit\":\"AppearStyles_exit__pZN3y\",\"exitActive\":\"AppearStyles_exitActive__3Xl9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1N5Bi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem_ContactItem__9cR7s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"AppearStyles_enter__3R0_Z\",\"enterActive\":\"AppearStyles_enterActive__2ZMhC\",\"exit\":\"AppearStyles_exit__i9uXx\",\"exitActive\":\"AppearStyles_exitActive__2tr_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__xKXoW\",\"Text\":\"ContactList_Text__xRF_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__19629\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"AppearStyles_appear__JAViF\",\"appearActive\":\"AppearStyles_appearActive__1ioD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"AppearStyles_enter__3Gc33\",\"enterActive\":\"AppearStyles_enterActive__3AVUZ\",\"exit\":\"AppearStyles_exit__220wm\",\"exitActive\":\"AppearStyles_exitActive__3_2Sg\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n    'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n    'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const removeContactRequest = createAction(\n    'contacts/removeContactRequest',\n);\nexport const removeContactSuccess = createAction(\n    'contacts/removeContactSuccess',\n);\nexport const removeContactError = createAction('contacts/removeContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    removeContactRequest,\n    removeContactSuccess,\n    removeContactError,\n    changeFilter,\n} from './contacts-actions';\n\nconst contactReducer = createReducer([], {\n    [fetchContactsSuccess]: (_, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [removeContactSuccess]: (state, { payload }) =>\n        state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n    [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n    [fetchContactsRequest]: () => true,\n    [fetchContactsSuccess]: () => false,\n    [fetchContactsError]: () => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [removeContactRequest]: () => true,\n    [removeContactSuccess]: () => false,\n    [removeContactError]: () => false,\n});\n\nexport default combineReducers({\n    contacts: contactReducer,\n    filter: filterReducer,\n    loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport contactsReducer from './contacts/contacts-reducers';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: ['filter'],\n};\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n];\n\nconst store = configureStore({\n    reducer: {\n        contacts: persistReducer(persistConfig, contactsReducer),\n    },\n    middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import axios from 'axios';\n\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    removeContactRequest,\n    removeContactSuccess,\n    removeContactError,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n    dispatch(fetchContactsRequest());\n\n    try {\n        const { data } = await axios.get('/contacts');\n\n        dispatch(fetchContactsSuccess(data));\n    } catch (error) {\n        dispatch(fetchContactsError(error));\n    }\n};\n\nconst addContact = contact => async dispatch => {\n    dispatch(addContactRequest());\n\n    try {\n        const { data } = await axios.post('/contacts', contact);\n\n        dispatch(addContactSuccess(data));\n    } catch (error) {\n        dispatch(addContactError(error));\n    }\n};\n\nconst deleteContact = contactId => async dispatch => {\n    dispatch(removeContactRequest());\n\n    try {\n        await axios.delete(`/contacts/${contactId}`);\n\n        dispatch(removeContactSuccess(contactId));\n    } catch (error) {\n        dispatch(removeContactError(error));\n    }\n};\n\nexport default {\n    fetchContacts,\n    addContact,\n    deleteContact,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.contacts;\n\nconst getLoading = state => state.contacts.loading;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getVisibleContacts = createSelector(\n    [getContacts, getFilter],\n    (contacts, filter) => {\n        return contacts.filter(\n            contact =>\n                contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n                contact.number.includes(filter),\n        );\n    },\n);\n\nconst getContactById = createSelector(\n    [(_, contactId) => contactId, getContacts],\n    (contactId, contacts) => contacts.find(contact => contact.id === contactId),\n);\n\nexport default {\n    getLoading,\n    getFilter,\n    getContacts,\n    getVisibleContacts,\n    getContactById,\n};\n","import React from 'react';\n\nimport style from './Notification.module.scss';\n\nconst Notification = () => (\n    <div className={style.Notification}>\n        <p>This contact is already on the list!</p>\n    </div>\n);\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport NumberFormat from 'react-number-format';\n\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\n\nimport Notification from '../Notification/Notification';\n\nimport style from './ContactForm.module.scss';\nimport AppearStyles from './AppearStyles.module.scss';\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n        existingContact: false,\n        errorMessage: '',\n    };\n\n    handleChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        const { name, number } = this.state;\n        const existedContacts = this.props.contacts.map(contact =>\n            contact.name.toLowerCase(),\n        );\n        if (existedContacts.includes(name.toLowerCase())) {\n            this.showNotification(`${name} is already on the list!`);\n        } else if (!name || !number) {\n            this.showNotification('You are trying to add an empty field!');\n        } else {\n            this.props.onAddContact({\n                name: name,\n                number: number,\n            });\n        }\n\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    showNotification = () => {\n        this.setState({ existingContact: true });\n        setTimeout(() => this.setState({ existingContact: false }), 2000);\n    };\n\n    render() {\n        const { name, number, existingContact } = this.state;\n\n        return (\n            <>\n                <CSSTransition\n                    in={existingContact}\n                    classNames={AppearStyles}\n                    unmountOnExit\n                    timeout={200}\n                >\n                    <Notification />\n                </CSSTransition>\n                <form\n                    className={style.ContactForm}\n                    onSubmit={this.handleSubmit}\n                >\n                    <label className={style.nameLabel}>\n                        <input\n                            className={style.nameInput}\n                            onChange={this.handleChange}\n                            placeholder=\"Enter name...\"\n                            value={name}\n                            type=\"text\"\n                            name=\"name\"\n                            autoFocus\n                        />\n                    </label>\n\n                    <label>\n                        <NumberFormat\n                            className={style.numberInput}\n                            format=\"###-##-##\"\n                            onChange={this.handleChange}\n                            placeholder=\"Enter phone Number...\"\n                            value={number}\n                            name=\"number\"\n                            mask=\"\"\n                        />\n                    </label>\n\n                    <button className={style.addButton} type=\"submit\"></button>\n                </form>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    contacts: contactsSelectors.getContacts(state),\n});\nconst mapDispatchToProps = {\n    onAddContact: contactsOperations.addContact,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\n\nimport style from './Button.module.scss';\n\nexport default function Button({ id, onRemove }) {\n    return (\n        <button\n            id={id}\n            className={style.Button}\n            type=\"submit\"\n            onClick={onRemove}\n        ></button>\n    );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nimport Button from '../Button/Button';\n\nimport style from './ContactItem.module.scss';\n\nconst ContactItem = ({ contact = {}, onRemoveContact }) => {\n    return (\n        <li className={style.ContactItem}>\n            {contact.name}: {contact.number}\n            <Button id={contact.id} onRemove={onRemoveContact}></Button>\n        </li>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const contact = contactsSelectors.getContactById(state, ownProps.id);\n\n    return {\n        contact,\n    };\n};\n\nconst mapDispatchToProps = (dispach, ownProps) => ({\n    onRemoveContact: () =>\n        dispach(contactsOperations.deleteContact(ownProps.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nimport ContactItem from '../ContactItem/ContactItem';\n\nimport AppearStyles from './AppearStyles.module.scss';\nimport style from './ContactList.module.scss';\n\nconst ContactList = ({ contacts }) => {\n    return (\n        <>\n            <TransitionGroup component=\"ul\" className={style.ContactList}>\n                {contacts.length > 0 &&\n                    contacts.map(contact => (\n                        <CSSTransition\n                            timeout={200}\n                            key={contact.id}\n                            classNames={AppearStyles}\n                        >\n                            <ContactItem key={contact.id} id={contact.id} />\n                        </CSSTransition>\n                    ))}\n            </TransitionGroup>\n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport style from './Section.module.scss';\nimport AppearStyles from './AppearStyles.module.scss';\n\nexport default function Section({ title, children }) {\n    return (\n        <div className={style.Section}>\n            <CSSTransition\n                in={true}\n                appear\n                unmountOnExit\n                classNames={AppearStyles}\n                timeout={2000}\n            >\n                <h2 ref={React.createRef()}>{title}</h2>\n            </CSSTransition>\n            {children}\n        </div>\n    );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n\nimport * as contactsActions from '../../redux/contacts/contacts-actions';\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nimport AppearStyles from './AppearStyles.module.scss';\n\nconst Filter = ({ contacts, value, onChangeFilter }) =>\n    contacts.length > 1 && (\n        <label className=\"label\">\n            <CSSTransition timeout={200} classNames={AppearStyles}>\n                <input\n                    className=\"filterInput\"\n                    type=\"text\"\n                    name=\"filter\"\n                    value={value}\n                    placeholder=\"Search contact...\"\n                    onChange={event => onChangeFilter(event.target.value)}\n                />\n            </CSSTransition>\n        </label>\n    );\n\nconst mapStateToProps = state => ({\n    value: contactsSelectors.getFilter(state),\n    contacts: contactsSelectors.getContacts(state),\n});\n\nconst mapDispatchToProps = {\n    onChangeFilter: contactsActions.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Section from '../Section';\nimport Filter from '../Filter';\n\nclass ContactsView extends Component {\n    componentDidMount() {\n        this.props.onFetchContacts();\n    }\n\n    render() {\n        return (\n            <>\n                <Section title=\"Phonebook\">\n                    <ContactForm />\n                </Section>\n\n                <Section title=\"Contacts\">\n                    <Filter />\n                    {this.props.isLoadingContact && (\n                        <h1 className=\"loading-state\">Loading...</h1>\n                    )}\n                    <ContactList />\n                </Section>\n            </>\n        );\n    }\n}\nconst mapStateToProps = state => ({\n    isLoadingContact: contactsSelectors.getLoading(state),\n});\nconst mapDispatchToProps = {\n    onFetchContacts: contactsOperations.fetchContacts,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\n","import React from 'react';\n\nimport ContactsView from './views/ContactsView';\n\nconst App = () => <ContactsView />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './components/App';\n\nimport './index.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store.store}>\n            <PersistGate loading={null} persistor={store.persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}