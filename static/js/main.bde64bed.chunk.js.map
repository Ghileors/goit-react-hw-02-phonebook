{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/Notification/Notification.module.scss","components/ContactForm/AppearStyles.module.scss","components/Button/Button.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactList/AppearStyles.module.scss","components/ContactList/ContactList.module.scss","components/Section/Section.module.scss","components/Section/AppearStyles.module.scss","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/Button/Button.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Section/Section.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["module","exports","Notification","className","style","ContactForm","state","name","number","existingContact","handleChange","event","target","value","setState","handleSubmit","preventDefault","existedContacts","props","appState","contacts","map","contact","newName","includes","showNotification","onSubmit","id","uuidv4","setTimeout","this","CSSTransition","in","classNames","AppearStyles","unmountOnExit","timeout","nameLabel","nameInput","onChange","placeholder","type","autoFocus","numberInput","format","mask","addButton","Component","Button","onRemove","onClick","ContactItem","onRemoveContact","ContactList","TransitionGroup","component","length","key","Section","title","children","appear","ref","React","createRef","Filter","onChangeFilter","App","filter","addContact","newNumber","prevState","deleteContact","filterContacts","getVisibleContacts","toLowerCase","storedContacts","JSON","parse","localStorage","getItem","prevProps","nextContacts","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bde64bed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1fCkt\",\"nameInput\":\"ContactForm_nameInput__3foIk\",\"numberInput\":\"ContactForm_numberInput__3ujaF\",\"nameLabel\":\"ContactForm_nameLabel__3B3ub\",\"addButton\":\"ContactForm_addButton__2Bryk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__3wRcD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"AppearStyles_enter__1I0v3\",\"enterActive\":\"AppearStyles_enterActive__1rBMo\",\"exit\":\"AppearStyles_exit__pZN3y\",\"exitActive\":\"AppearStyles_exitActive__3Xl9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1N5Bi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem_ContactItem__9cR7s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"AppearStyles_enter__3R0_Z\",\"enterActive\":\"AppearStyles_enterActive__2ZMhC\",\"exit\":\"AppearStyles_exit__i9uXx\",\"exitActive\":\"AppearStyles_exitActive__2tr_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__xKXoW\",\"ContactItem\":\"ContactList_ContactItem__2fnXz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__19629\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"AppearStyles_appear__JAViF\",\"appearActive\":\"AppearStyles_appearActive__1ioD3\"};","import React from 'react';\n\nimport style from './Notification.module.scss';\n\nconst Notification = () => (\n    <div className={style.Notification}>\n        <p>This contact is already on the list!</p>\n    </div>\n);\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport NumberFormat from 'react-number-format';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Notification from '../Notification';\n\nimport AppearStyles from './AppearStyles.module.scss';\nimport style from './ContactForm.module.scss';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default class ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n        existingContact: false,\n    };\n\n    handleChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { name, number } = this.state;\n\n        const existedContacts = this.props.appState.contacts.map(\n            contact => contact.name,\n        );\n\n        const newName = this.state.name;\n        existedContacts.includes(newName) && this.showNotification();\n        this.props.onSubmit({\n            id: uuidv4(),\n            name: name,\n            number: number,\n        });\n\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    showNotification = () => {\n        this.setState({ existingContact: true });\n        setTimeout(() => this.setState({ existingContact: false }), 5000);\n    };\n\n    render() {\n        const { name, number, existingContact } = this.state;\n\n        return (\n            <>\n                <CSSTransition\n                    in={existingContact}\n                    classNames={AppearStyles}\n                    unmountOnExit\n                    timeout={200}\n                >\n                    <Notification />\n                </CSSTransition>\n                <form\n                    className={style.ContactForm}\n                    onSubmit={this.handleSubmit}\n                >\n                    <label className={style.nameLabel}>\n                        <input\n                            className={style.nameInput}\n                            onChange={this.handleChange}\n                            placeholder=\"Enter name...\"\n                            value={name}\n                            type=\"text\"\n                            name=\"name\"\n                            autoFocus\n                        />\n                    </label>\n\n                    <label>\n                        <NumberFormat\n                            className={style.numberInput}\n                            format=\"###-##-##\"\n                            onChange={this.handleChange}\n                            placeholder=\"Enter phone Number...\"\n                            value={number}\n                            name=\"number\"\n                            mask=\"\"\n                        />\n                    </label>\n\n                    <button className={style.addButton} type=\"submit\"></button>\n                </form>\n            </>\n        );\n    }\n}\n\nContactForm.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    existingContact: PropTypes.bool,\n};\n","import React from 'react';\n\nimport style from './Button.module.scss';\n\nexport default function Button({ id, onRemove }) {\n    return (\n        <button\n            id={id}\n            className={style.Button}\n            type=\"submit\"\n            onClick={onRemove}\n        ></button>\n    );\n}\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nimport Button from '../Button/Button';\n\nimport style from './ContactItem.module.scss';\n\nexport default function ContactItem({ contact, onRemoveContact }) {\n    return (\n        <li className={style.ContactItem}>\n            {contact.name}: {contact.number}\n            <Button id={contact.id} onRemove={onRemoveContact}></Button>\n        </li>\n    );\n}\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport ContactItem from '../ContactItem';\n\nimport AppearStyles from './AppearStyles.module.scss';\nimport style from './ContactList.module.scss';\n\nexport default function ContactList({ contacts, onRemoveContact }) {\n    return (\n        <>\n            <TransitionGroup component=\"ul\" className={style.ContactList}>\n                {contacts.length > 0 &&\n                    contacts.map(contact => (\n                        <CSSTransition\n                            timeout={200}\n                            key={contact.id}\n                            classNames={AppearStyles}\n                        >\n                            <ContactItem\n                                onRemoveContact={onRemoveContact}\n                                contact={contact}\n                                key={contact.id}\n                            />\n                        </CSSTransition>\n                    ))}\n            </TransitionGroup>\n        </>\n    );\n}\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport style from './Section.module.scss';\nimport AppearStyles from './AppearStyles.module.scss';\n\nexport default function Section({ title, children }) {\n    return (\n        <div className={style.Section}>\n            <CSSTransition\n                in={true}\n                appear\n                unmountOnExit\n                classNames={AppearStyles}\n                timeout={2000}\n            >\n                <h2 ref={React.createRef()}>{title}</h2>\n            </CSSTransition>\n            {children}\n        </div>\n    );\n}\n","import React from 'react';\n\nconst Filter = ({ value, onChangeFilter }) => {\n    return (\n        <label>\n            <input\n                className=\"filterInput\"\n                type=\"text\"\n                name=\"filter\"\n                value={value}\n                placeholder=\"Search contact...\"\n                onChange={event => onChangeFilter(event.target)}\n            />\n        </label>\n    );\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Section from './Section';\nimport Filter from './Filter/Filter';\n\nclass App extends Component {\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        filter: '',\n    };\n\n    componentDidMount() {\n        const storedContacts = JSON.parse(localStorage.getItem('contacts'));\n        storedContacts && this.setState({ contacts: storedContacts });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const nextContacts = this.state.contacts;\n        const prevContacts = prevState.contacts;\n        prevContacts !== nextContacts &&\n            localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n\n    addContact = contact => {\n        const newName = contact.name;\n        const newNumber = contact.number;\n        this.setState(prevState => {\n            const existedContacts = prevState.contacts.map(\n                contact => contact.name,\n            );\n            return {\n                contacts:\n                    existedContacts.includes(newName) ||\n                    newName === '' ||\n                    newNumber === ''\n                        ? prevState.contacts\n                        : [...prevState.contacts, contact],\n            };\n        });\n    };\n\n    deleteContact = event => {\n        this.setState({\n            contacts: this.state.contacts.filter(\n                contact => contact.id !== event.target.id,\n            ),\n        });\n    };\n\n    filterContacts = event => {\n        const { name, value } = event;\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    getVisibleContacts = () => {\n        const { contacts, filter } = this.state;\n\n        return (\n            contacts.length &&\n            contacts.filter(\n                contact =>\n                    contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n                    contact.number.includes(filter),\n            )\n        );\n    };\n\n    render() {\n        const { filter } = this.state;\n        const visibleContacts = this.getVisibleContacts();\n\n        return (\n            <div>\n                <Section title=\"Phonebook\">\n                    <ContactForm\n                        onSubmit={this.addContact}\n                        appState={this.state}\n                    />\n                </Section>\n                <hr />\n\n                <Section title=\"Contacts\">\n                    {this.state.contacts.length > 1 && (\n                        <Filter\n                            onChangeFilter={this.filterContacts}\n                            value={filter}\n                        />\n                    )}\n                    {visibleContacts.length > 0 ? (\n                        <ContactList\n                            contacts={visibleContacts}\n                            onRemoveContact={this.deleteContact}\n                        />\n                    ) : (\n                        <p className=\"text\">The phone book is empty.</p>\n                    )}\n                </Section>\n                <hr />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './index.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}