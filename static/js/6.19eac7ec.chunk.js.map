{"version":3,"sources":["views/LoginView.js"],"names":["styles","container","minHeight","display","flexDirection","alignItems","justifyContent","color","form","width","label","marginBottom","LoginView","state","email","password","handleChange","target","name","value","setState","handleSubmit","event","preventDefault","props","onLogin","this","style","onSubmit","autoComplete","type","onChange","placeholder","autoFocus","className","LoginBtn","Component","mapDispatchToProps","authOperations","logIn","connect"],"mappings":"4MAMMA,EAAS,CACbC,UAAW,CACTC,UAAW,qBACXC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,MAAO,QAETC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLP,QAAS,OACTC,cAAe,SACfO,aAAc,KAIZC,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG1BE,aAAe,SAAAC,GACbA,EAAMC,iBAEN,EAAKC,MAAMC,QAAQ,EAAKZ,OAExB,EAAKO,SAAS,CAAEF,KAAM,GAAIJ,MAAO,GAAIC,SAAU,M,uDAGvC,IAAD,EACqBW,KAAKb,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SAEf,OACE,yBAAKY,MAAO3B,EAAOC,WACjB,0CAEA,0BACE2B,SAAUF,KAAKL,aACfM,MAAO3B,EAAOQ,KACdqB,aAAa,OAEb,2BAAOF,MAAO3B,EAAOU,OAArB,QAEE,2BACEoB,KAAK,QACLZ,KAAK,QACLC,MAAOL,EACPiB,SAAUL,KAAKV,aACfgB,YAAY,mBACZC,WAAS,KAIb,2BAAON,MAAO3B,EAAOU,OAArB,WAEE,2BACEoB,KAAK,WACLZ,KAAK,WACLC,MAAOJ,EACPgB,SAAUL,KAAKV,aACfgB,YAAY,yBAIhB,4BAAQE,UAAWP,IAAMQ,SAAUL,KAAK,UAAxC,e,GArDcM,aA8DlBC,EAAqB,CACzBZ,QAASa,IAAeC,OAGXC,sBAAQ,KAAMH,EAAdG,CAAkC5B","file":"static/js/6.19eac7ec.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../redux/auth';\n\nimport style from '../styles/views.module.scss';\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: '#000',\n  },\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nclass LoginView extends Component {\n  state = {\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onLogin(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div style={styles.container}>\n        <h1>Login page</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          style={styles.form}\n          autoComplete=\"off\"\n        >\n          <label style={styles.label}>\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n              placeholder=\"Enter your email\"\n              autoFocus\n            />\n          </label>\n\n          <label style={styles.label}>\n            Password\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n              placeholder=\"Enter your password\"\n            />\n          </label>\n\n          <button className={style.LoginBtn} type=\"submit\">\n            Login\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onLogin: authOperations.logIn,\n};\n\nexport default connect(null, mapDispatchToProps)(LoginView);\n"],"sourceRoot":""}