{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/Notification/Notification.module.scss","components/ContactForm/AppearStyles.module.scss","components/Button/Button.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactList/AppearStyles.module.scss","components/ContactList/ContactList.module.scss","components/Section/Section.module.scss","components/Section/AppearStyles.module.scss","components/Filter/AppearStyles.module.scss","redux/contacts/contactsActions.js","redux/contacts/contactsReducers.js","redux/store.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/Button/Button.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Section/Section.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["module","exports","addContact","createAction","contact","payload","id","uuidv4","name","number","removeContact","changeFilter","contactReducer","createReducer","contactsActions","state","action","map","includes","filter","filterReducer","_","combineReducers","contacts","store","configureStore","reducer","contactsReducer","Notification","className","style","ContactForm","existingContact","handleChange","event","target","value","setState","handleSubmit","preventDefault","existingContacts","props","cont","newName","showNotification","onAddContact","setTimeout","this","CSSTransition","in","classNames","AppearStyles","unmountOnExit","timeout","onSubmit","nameLabel","nameInput","onChange","placeholder","type","autoFocus","numberInput","format","mask","addButton","Component","mapDispatchToProps","connect","Button","onRemove","onClick","ownProps","find","dispach","onRemoveContact","ContactItem","toLowerCase","TransitionGroup","component","ContactList","length","key","Section","title","children","appear","ref","React","createRef","onChangeFilter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c77e1041.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1fCkt\",\"nameInput\":\"ContactForm_nameInput__3foIk\",\"numberInput\":\"ContactForm_numberInput__3ujaF\",\"nameLabel\":\"ContactForm_nameLabel__3B3ub\",\"addButton\":\"ContactForm_addButton__2Bryk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__3wRcD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"AppearStyles_enter__1I0v3\",\"enterActive\":\"AppearStyles_enterActive__1rBMo\",\"exit\":\"AppearStyles_exit__pZN3y\",\"exitActive\":\"AppearStyles_exitActive__3Xl9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1N5Bi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem_ContactItem__9cR7s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"AppearStyles_enter__3R0_Z\",\"enterActive\":\"AppearStyles_enterActive__2ZMhC\",\"exit\":\"AppearStyles_exit__i9uXx\",\"exitActive\":\"AppearStyles_exitActive__2tr_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__xKXoW\",\"Text\":\"ContactList_Text__xRF_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__19629\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"AppearStyles_appear__JAViF\",\"appearActive\":\"AppearStyles_appearActive__1ioD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"AppearStyles_enter__3Gc33\",\"enterActive\":\"AppearStyles_enterActive__3AVUZ\",\"exit\":\"AppearStyles_exit__220wm\",\"exitActive\":\"AppearStyles_exitActive__3_2Sg\"};","import { createAction } from '@reduxjs/toolkit';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', contact => ({\n    payload: {\n        contact: {\n            id: uuidv4(),\n            name: contact.name,\n            number: contact.number,\n        },\n    },\n}));\n\nconst removeContact = createAction('contacts/remove');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default { addContact, removeContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport contactsActions from './contactsActions';\n\nconst addContact = (state, action) => {\n    return state\n        .map(contact => contact.name)\n        .includes(action.payload.contact.name) ||\n        action.payload.contact.name === '' ||\n        action.payload.contact.number === ''\n        ? state\n        : [...state, action.payload.contact];\n};\n\nconst removeContact = (state, action) => {\n    return state.filter(contact => contact.id !== action.payload);\n};\n\nconst contactReducer = createReducer([], {\n    [contactsActions.addContact]: addContact,\n    [contactsActions.removeContact]: removeContact,\n});\n\nconst filterReducer = createReducer('', {\n    [contactsActions.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n    contacts: contactReducer,\n    filter: filterReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contactsReducers';\n\nconst store = configureStore({\n    reducer: {\n        contacts: contactsReducer,\n    },\n});\n\nexport default store;\n","import React from 'react';\n\nimport style from './Notification.module.scss';\n\nconst Notification = () => (\n    <div className={style.Notification}>\n        <p>This contact is already on the list!</p>\n    </div>\n);\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport NumberFormat from 'react-number-format';\n\nimport Notification from '../Notification/Notification';\nimport contactsActions from '../../redux/contacts/contactsActions';\n\nimport style from './ContactForm.module.scss';\nimport AppearStyles from './AppearStyles.module.scss';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n        existingContact: false,\n    };\n\n    handleChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        const { name, number } = this.state;\n        const existingContacts = this.props.contacts.map(cont => cont.name);\n        const newName = this.state.name;\n\n        existingContacts.includes(newName) && this.showNotification();\n\n        this.props.onAddContact({\n            id: uuidv4(),\n            name: name,\n            number: number,\n        });\n\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    showNotification = () => {\n        this.setState({ existingContact: true });\n        setTimeout(() => this.setState({ existingContact: false }), 2000);\n    };\n\n    render() {\n        const { name, number, existingContact } = this.state;\n\n        return (\n            <>\n                <CSSTransition\n                    in={existingContact}\n                    classNames={AppearStyles}\n                    unmountOnExit\n                    timeout={200}\n                >\n                    <Notification />\n                </CSSTransition>\n                <form\n                    className={style.ContactForm}\n                    onSubmit={this.handleSubmit}\n                >\n                    <label className={style.nameLabel}>\n                        <input\n                            className={style.nameInput}\n                            onChange={this.handleChange}\n                            placeholder=\"Enter name...\"\n                            value={name}\n                            type=\"text\"\n                            name=\"name\"\n                            autoFocus\n                        />\n                    </label>\n\n                    <label>\n                        <NumberFormat\n                            className={style.numberInput}\n                            format=\"###-##-##\"\n                            onChange={this.handleChange}\n                            placeholder=\"Enter phone Number...\"\n                            value={number}\n                            name=\"number\"\n                            mask=\"\"\n                        />\n                    </label>\n\n                    <button className={style.addButton} type=\"submit\"></button>\n                </form>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    contacts: state.contacts.contacts,\n});\n\nconst mapDispatchToProps = {\n    onAddContact: contactsActions.addContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\n\nimport style from './Button.module.scss';\n\nexport default function Button({ id, onRemove }) {\n    return (\n        <button\n            id={id}\n            className={style.Button}\n            type=\"submit\"\n            onClick={onRemove}\n        ></button>\n    );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contactsActions';\n\nimport Button from '../Button/Button';\n\nimport style from './ContactItem.module.scss';\n\nconst ContactItem = ({ contact = {}, onRemoveContact }) => {\n    return (\n        <li className={style.ContactItem}>\n            {contact.name}: {contact.number}\n            <Button id={contact.id} onRemove={onRemoveContact}></Button>\n        </li>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const contact = state.contacts.contacts.find(\n        contact => contact.id === ownProps.id,\n    );\n\n    return {\n        contact,\n    };\n};\n\nconst mapDispatchToProps = (dispach, ownProps) => ({\n    onRemoveContact: () => dispach(contactsActions.removeContact(ownProps.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\n\nimport ContactItem from '../ContactItem/ContactItem';\n\nimport AppearStyles from './AppearStyles.module.scss';\nimport style from './ContactList.module.scss';\n\nconst ContactList = ({ contacts }) => {\n    return (\n        <>\n            <TransitionGroup component=\"ul\" className={style.ContactList}>\n                {contacts.length > 0 &&\n                    contacts.map(contact => (\n                        <CSSTransition\n                            timeout={200}\n                            key={contact.id}\n                            classNames={AppearStyles}\n                        >\n                            <ContactItem key={contact.id} id={contact.id} />\n                        </CSSTransition>\n                    ))}\n            </TransitionGroup>\n        </>\n    );\n};\nconst mapStateToProps = state => {\n    const { contacts, filter } = state.contacts;\n    const visibleContacts = contacts.filter(\n        contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n            contact.number.includes(filter),\n    );\n    return {\n        contacts: visibleContacts,\n    };\n};\nexport default connect(mapStateToProps)(ContactList);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport style from './Section.module.scss';\nimport AppearStyles from './AppearStyles.module.scss';\n\nexport default function Section({ title, children }) {\n    return (\n        <div className={style.Section}>\n            <CSSTransition\n                in={true}\n                appear\n                unmountOnExit\n                classNames={AppearStyles}\n                timeout={2000}\n            >\n                <h2 ref={React.createRef()}>{title}</h2>\n            </CSSTransition>\n            {children}\n        </div>\n    );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n\nimport contactsActions from '../../redux/contacts/contactsActions';\nimport AppearStyles from './AppearStyles.module.scss';\n\nconst Filter = ({ contacts, value, onChangeFilter }) =>\n    contacts.length > 1 && (\n        <label className=\"label\">\n            <CSSTransition timeout={200} classNames={AppearStyles}>\n                <input\n                    className=\"filterInput\"\n                    type=\"text\"\n                    name=\"filter\"\n                    value={value}\n                    placeholder=\"Search contact...\"\n                    onChange={event => onChangeFilter(event.target.value)}\n                />\n            </CSSTransition>\n        </label>\n    );\n\nconst mapStateToProps = state => ({\n    value: state.contacts.filter,\n    contacts: state.contacts.contacts,\n});\n\nconst mapDispatchToProps = {\n    onChangeFilter: contactsActions.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Section from './Section/Section';\nimport Filter from './Filter/Filter';\n\nconst App = () => (\n    <>\n        <Section title=\"Phonebook\">\n            <ContactForm />\n        </Section>\n        <hr />\n\n        <Section title=\"Contacts\">\n            <Filter />\n            <ContactList />\n        </Section>\n        <hr />\n    </>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\n\nimport './index.scss';\n\nReactDOM.render(\n    // <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    // </React.StrictMode>\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}