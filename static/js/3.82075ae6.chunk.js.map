{"version":3,"sources":["components/PhoneBook/Notification/Notification.js","components/PhoneBook/ContactForm/ContactForm.js","components/PhoneBook/ContactItem/ContactItem.js","components/PhoneBook/ContactList/ContactList.js","components/PhoneBook/Section/Section.js","components/PhoneBook/Filter/Filter.js","views/ContactsView.js","components/PhoneBook/Notification/Notification.module.scss","components/PhoneBook/ContactForm/ContactForm.module.scss","components/PhoneBook/ContactForm/AppearStyles.module.scss","components/PhoneBook/ContactItem/ContactItem.module.scss","components/PhoneBook/ContactList/AppearStyles.module.scss","components/PhoneBook/ContactList/ContactList.module.scss","components/PhoneBook/Section/Section.module.scss","components/PhoneBook/Section/AppearStyles.module.scss","components/PhoneBook/Filter/Filter.module.scss","components/PhoneBook/Filter/AppearStyles.module.scss"],"names":["Notification","className","style","Wrp","Popup","NotificationTitle","NotificationText","ContactForm","state","name","number","existingContact","errorMessage","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","contacts","map","contact","toLowerCase","includes","showNotification","onAddContact","setTimeout","this","CSSTransition","in","classNames","AppearStyles","unmountOnExit","timeout","onSubmit","ContactFormLabel","ContactFormInput","onChange","placeholder","type","autoFocus","format","mask","addButton","Component","mapDispatchToProps","contactsOperations","addContact","connect","contactsSelectors","getContacts","ownProps","getContactById","id","dispach","onRemoveContact","deleteContact","ContactItem","ContactItemBtn","onClick","getVisibleContacts","ContactListWrp","TransitionGroup","component","ContactList","length","key","Section","title","children","AppWrapper","appear","ref","React","createRef","onChangeFilter","contactsActions","changeFilter","getFilter","Filter","ContactsView","onFetchContacts","AppContainer","isLoadingContact","fetchContacts","getLoading","module","exports"],"mappings":"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","file":"static/js/3.82075ae6.chunk.js","sourcesContent":["import React from 'react';\n\nimport style from './Notification.module.scss';\n\nconst Notification = () => (\n  <div className={style.Wrp}>\n    <div className={style.Popup}>\n      <h3 className={style.NotificationTitle}>Attention!</h3>\n      <p className={style.NotificationText}>This contact exist in list!</p>\n    </div>\n  </div>\n);\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport NumberFormat from 'react-number-format';\n\nimport { contactsSelectors, contactsOperations } from '../../../redux/contacts';\n\nimport Notification from '../Notification/Notification';\n\nimport style from './ContactForm.module.scss';\nimport AppearStyles from './AppearStyles.module.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    existingContact: false,\n    errorMessage: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const existedContacts = this.props.contacts.map(contact =>\n      contact.name.toLowerCase(),\n    );\n    if (existedContacts.includes(name.toLowerCase())) {\n      this.showNotification(`${name} is already on the list!`);\n    } else if (!name || !number) {\n      this.showNotification('You are trying to add an empty field!');\n    } else {\n      this.props.onAddContact({\n        name: name,\n        number: number,\n      });\n    }\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  showNotification = () => {\n    this.setState({ existingContact: true });\n    setTimeout(() => this.setState({ existingContact: false }), 2000);\n  };\n\n  render() {\n    const { name, number, existingContact } = this.state;\n\n    return (\n      <>\n        <CSSTransition\n          in={existingContact}\n          classNames={AppearStyles}\n          unmountOnExit\n          timeout={250}\n        >\n          <Notification />\n        </CSSTransition>\n        <form className={style.ContactForm} onSubmit={this.handleSubmit}>\n          <label className={style.ContactFormLabel}>\n            Name\n            <input\n              className={style.ContactFormInput}\n              onChange={this.handleChange}\n              placeholder=\"Enter name...\"\n              value={name}\n              type=\"text\"\n              name=\"name\"\n              autoFocus\n            />\n          </label>\n\n          <label>\n            Number\n            <NumberFormat\n              className={style.ContactFormInput}\n              format=\"###-##-##\"\n              onChange={this.handleChange}\n              placeholder=\"Enter phone Number...\"\n              value={number}\n              name=\"number\"\n              mask=\"\"\n            />\n          </label>\n\n          <button className={style.addButton} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getContacts(state),\n});\nconst mapDispatchToProps = {\n  onAddContact: contactsOperations.addContact,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { contactsSelectors, contactsOperations } from '../../../redux/contacts';\n\nimport style from './ContactItem.module.scss';\n\nconst ContactItem = ({ contact = {}, onRemoveContact }) => {\n  return (\n    <li className={style.ContactItem}>\n      {contact.name}: {contact.number}\n      <button\n        className={style.ContactItemBtn}\n        id={contact.id}\n        onClick={onRemoveContact}\n      >\n        âœ•\n      </button>\n    </li>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const contact = contactsSelectors.getContactById(state, ownProps.id);\n\n  return {\n    contact,\n  };\n};\n\nconst mapDispatchToProps = (dispach, ownProps) => ({\n  onRemoveContact: () => dispach(contactsOperations.deleteContact(ownProps.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\n\nimport { contactsSelectors } from '../../../redux/contacts';\n\nimport ContactItem from '../ContactItem/ContactItem';\n\nimport AppearStyles from './AppearStyles.module.scss';\nimport style from './ContactList.module.scss';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <div className={style.ContactListWrp}>\n      <TransitionGroup component=\"ul\" className={style.ContactList}>\n        {contacts.length > 0 &&\n          contacts.map(contact => (\n            <CSSTransition\n              timeout={200}\n              key={contact.id}\n              classNames={AppearStyles}\n            >\n              <ContactItem key={contact.id} id={contact.id} />\n            </CSSTransition>\n          ))}\n      </TransitionGroup>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport style from './Section.module.scss';\nimport AppearStyles from './AppearStyles.module.scss';\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={style.AppWrapper}>\n      <CSSTransition\n        in={true}\n        appear\n        unmountOnExit\n        classNames={AppearStyles}\n        timeout={2000}\n      >\n        <h2 ref={React.createRef()}>{title}</h2>\n      </CSSTransition>\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { contactsSelectors, contactsActions } from '../../../redux/contacts';\n\nimport style from './Filter.module.scss';\nimport AppearStyles from './AppearStyles.module.scss';\n\nconst Filter = ({ contacts, value, onChangeFilter }) =>\n  contacts.length > 1 && (\n    <label className=\"label\">\n      Find contacts\n      <CSSTransition timeout={200} classNames={AppearStyles}>\n        <input\n          className={style.Filter}\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          placeholder=\"Search contact...\"\n          onChange={event => onChangeFilter(event.target.value)}\n        />\n      </CSSTransition>\n    </label>\n  );\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n  contacts: contactsSelectors.getContacts(state),\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { contactsOperations, contactsSelectors } from '../redux/contacts';\n\nimport ContactForm from '../components/PhoneBook/ContactForm';\nimport ContactList from '../components/PhoneBook/ContactList';\nimport Section from '../components/PhoneBook/Section';\nimport Filter from '../components/PhoneBook/Filter';\n\nimport style from '../styles/views.module.scss';\n\nclass ContactsView extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n\n  render() {\n    return (\n      <div className={style.AppWrapper}>\n        <div className={style.AppContainer}>\n          <Section title=\"Phonebook\">\n            <ContactForm />\n          </Section>\n\n          <Section title=\"Contacts\">\n            <Filter />\n            {this.props.isLoadingContact && (\n              <h1 className=\"loading-state\">Loading...</h1>\n            )}\n            <ContactList />\n          </Section>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  isLoadingContact: contactsSelectors.getLoading(state),\n});\nconst mapDispatchToProps = {\n  onFetchContacts: contactsOperations.fetchContacts,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrp\":\"Notification_Wrp__2pn13\",\"Popup\":\"Notification_Popup__3LAaB\",\"NotificationTitle\":\"Notification_NotificationTitle__6QARi\",\"NotificationText\":\"Notification_NotificationText__1CTOV\",\"NotificationBtn\":\"Notification_NotificationBtn__JV5VE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactFormInput\":\"ContactForm_ContactFormInput__2LJJ4\",\"ContactFormLabel\":\"ContactForm_ContactFormLabel__3cXqp\",\"addButton\":\"ContactForm_addButton__2s9it\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"AppearStyles_enter__3St1B\",\"enterActive\":\"AppearStyles_enterActive__XWbbw\",\"exit\":\"AppearStyles_exit__3NhCL\",\"exitActive\":\"AppearStyles_exitActive__23iRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem_ContactItem__3xmB7\",\"ContactItemBtn\":\"ContactItem_ContactItemBtn__2AeVb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"AppearStyles_enter__i69vI\",\"enterActive\":\"AppearStyles_enterActive__2T6C4\",\"exit\":\"AppearStyles_exit__1YG3j\",\"exitActive\":\"AppearStyles_exitActive__3wwdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactListWrp\":\"ContactList_ContactListWrp__3ANpf\",\"ContactList\":\"ContactList_ContactList__2IjUu\",\"Text\":\"ContactList_Text__1qhi-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppWrapper\":\"Section_AppWrapper__1sba6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"AppearStyles_appear__Hij4D\",\"appearActive\":\"AppearStyles_appearActive__2sloA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__15v80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"AppearStyles_enter__EdICJ\",\"enterActive\":\"AppearStyles_enterActive__1PDot\",\"exit\":\"AppearStyles_exit__2THGk\",\"exitActive\":\"AppearStyles_exitActive__2bOcp\"};"],"sourceRoot":""}