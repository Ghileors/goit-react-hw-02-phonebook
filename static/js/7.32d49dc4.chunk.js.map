{"version":3,"sources":["views/RegisterView.js"],"names":["styles","container","minHeight","display","flexDirection","alignItems","justifyContent","color","form","width","label","marginBottom","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","onRegister","this","style","onSubmit","autoComplete","type","onChange","placeholder","autoFocus","className","RegistrationBtn","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"4MAMMA,EAAS,CACbC,UAAW,CACTC,UAAW,qBACXC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,MAAO,QAETC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLP,QAAS,OACTC,cAAe,SACfO,aAAc,KAIZC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAMC,iBAEN,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,uDAGvC,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SAErB,OACE,yBAAKW,MAAO3B,EAAOC,WACjB,iDAEA,0BACE2B,SAAUF,KAAKL,aACfM,MAAO3B,EAAOQ,KACdqB,aAAa,OAEb,2BAAOF,MAAO3B,EAAOU,OAArB,OAEE,2BACEoB,KAAK,OACLhB,KAAK,OACLK,MAAOL,EACPiB,SAAUL,KAAKT,aACfe,YAAY,kBACZC,WAAS,KAIb,2BAAON,MAAO3B,EAAOU,OAArB,QAEE,2BACEoB,KAAK,QACLhB,KAAK,QACLK,MAAOJ,EACPgB,SAAUL,KAAKT,aACfe,YAAY,sBAIhB,2BAAOL,MAAO3B,EAAOU,OAArB,WAEE,2BACEoB,KAAK,WACLhB,KAAK,WACLK,MAAOH,EACPe,SAAUL,KAAKT,aACfe,YAAY,mDAIhB,4BAAQE,UAAWP,IAAMQ,gBAAiBL,KAAK,UAA/C,sB,GAjEiBM,aA0ErBC,EAAqB,CACzBZ,WAAYa,IAAeC,UAGdC,sBAAQ,KAAMH,EAAdG,CAAkC5B","file":"static/js/7.32d49dc4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../redux/auth';\n\nimport style from '../styles/views.module.scss';\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: '#000',\n  },\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nclass RegisterView extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <div style={styles.container}>\n        <h1>Registration page</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          style={styles.form}\n          autoComplete=\"off\"\n        >\n          <label style={styles.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              placeholder=\"Enter your name\"\n              autoFocus\n            />\n          </label>\n\n          <label style={styles.label}>\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n              placeholder=\"Enter your email\"\n            />\n          </label>\n\n          <label style={styles.label}>\n            Password\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n              placeholder=\"Create a password with more than 6 characters\"\n            />\n          </label>\n\n          <button className={style.RegistrationBtn} type=\"submit\">\n            Register now\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n"],"sourceRoot":""}