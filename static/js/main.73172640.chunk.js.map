{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","styles/views.module.scss","components/UserMenu/default-avatar.png","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/store.js","components/PrivateRoute.js","components/PublicRoute.js","components/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/Container/Container.js","App.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","contacts","createReducer","contactsActions","_","payload","state","filter","id","loading","combineReducers","getContacts","getFilter","getLoading","getVisibleContacts","createSelector","contact","name","toLowerCase","includes","number","getContactById","contactId","find","fetchContacts","dispatch","a","axios","get","data","addContact","post","deleteContact","delete","module","exports","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","setError","error","defaults","baseURL","headers","common","Authorization","register","credentials","response","message","logOut","logIn","getCurrentUser","getState","persistedToken","auth","getIsAuthenticated","Boolean","getUsername","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","connect","isAuthenticated","authSelectors","Component","component","redirectTo","routeProps","render","props","to","restricted","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","authOperations","defaultAvatar","src","alt","width","className","LogoutBtn","type","onClick","marginLeft","background","borderRadius","border","cursor","AuthNav","header","justifyContent","borderBottom","Container","children","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73172640.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst removeContactRequest = createAction('contacts/removeContactRequest');\nconst removeContactSuccess = createAction('contacts/removeContactSuccess');\nconst removeContactError = createAction('contacts/removeContactError');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n  changeFilter,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport contactsActions from './contacts-actions';\n\nconst contacts = createReducer([], {\n  [contactsActions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [contactsActions.addContactSuccess]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  [contactsActions.removeContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.fetchContactsRequest]: () => true,\n  [contactsActions.fetchContactsSuccess]: () => false,\n  [contactsActions.fetchContactsError]: () => false,\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.removeContactRequest]: () => true,\n  [contactsActions.removeContactSuccess]: () => false,\n  [contactsActions.removeContactError]: () => false,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.contacts;\n\nconst getLoading = state => state.contacts.loading;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getVisibleContacts = createSelector(\n    [getContacts, getFilter],\n    (contacts, filter) => {\n        return contacts.filter(\n            contact =>\n                contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n                contact.number.includes(filter),\n        );\n    },\n);\n\nconst getContactById = createSelector(\n    [(_, contactId) => contactId, getContacts],\n    (contactId, contacts) => contacts.find(contact => contact.id === contactId),\n);\n\nexport default {\n    getLoading,\n    getFilter,\n    getContacts,\n    getVisibleContacts,\n    getContactById,\n};\n","import axios from 'axios';\n\nimport contactsActions from './contacts-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(contactsActions.fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(contactsActions.fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.fetchContactsError(error));\n  }\n};\n\nconst addContact = contact => async dispatch => {\n  dispatch(contactsActions.addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n\n    dispatch(contactsActions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.addContactError(error));\n  }\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(contactsActions.removeContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n\n    dispatch(contactsActions.removeContactSuccess(contactId));\n  } catch (error) {\n    dispatch(contactsActions.removeContactError(error));\n  }\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppWrapper\":\"views_AppWrapper__2OSgf\",\"LogoutBtn\":\"views_LogoutBtn__1Ogsl\",\"LoginBtn\":\"views_LoginBtn__1J_rd\",\"RegistrationBtn\":\"views_RegistrationBtn__S5svW\"};","module.exports = __webpack_public_path__ + \"static/media/default-avatar.6d696526.png\";","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n});\n","import axios from 'axios';\n\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logOut, logIn, getCurrentUser };\n","const getIsAuthenticated = state => Boolean(state.auth.token);\n\nconst getUsername = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { authReducer } from './auth';\nimport { contactsReducer } from './contacts';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { authSelectors } from '../redux/auth';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { authSelectors } from '../redux/auth';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Home\n    </NavLink>\n\n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Contacts\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { authSelectors, authOperations } from '../../redux/auth';\n\nimport style from '../../styles/views.module.scss';\n\nimport defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n    color: '#000',\n  },\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div style={styles.container}>\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n    <span style={styles.name}>Welcome, {name}</span>\n    <button className={style.LogoutBtn} type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    marginLeft: 10,\n    padding: 7,\n    fontWeight: 400,\n    background: '#1c91b4',\n    borderRadius: 6,\n    border: 'none',\n    color: '#fff',\n    cursor: 'pointer',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Registration\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { authSelectors } from '../redux/auth';\n\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from 'react';\n\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React, { Component, Suspense, lazy } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport { authOperations } from './redux/auth';\n\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nimport AppBar from './components/AppBar';\nimport Container from './components/Container';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar />\n\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/login\"\n              component={ContactsView}\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}